spring:
  data:
    redis:
      client-type: lettuce
      host: localhost
      port: 6379
      database: 2
      client-name: user-svc
  kafka:
    bootstrap-servers: [ localhost:9092 ]
  cloud:
    inetutils:
      default-hostname: yamp-backend.local

  config:
    activate:
      on-profile: local-dev
  datasource:
    url: jdbc:postgresql://localhost:5432/user-svc-db
    username: 'user-svc-user'
    password: '{cipher}0579337b871cd41ba98c4875971fa8eca89a6a6902e15b6cf75f711c299912285e825d81331fa61ec4317b6306c3b29d'
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate.hibernate.format_sql: true
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
logging:
  level:
    org.apache.tomcat: DEBUG
    org.springframework.web: DEBUG
    com.example.userservice.controller: DEBUG
    com.example.userservice.service: DEBUG
    com.example.yamp.usersvc.event: DEBUG
  pattern:
    level:  "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
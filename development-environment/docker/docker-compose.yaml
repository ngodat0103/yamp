name: yamp-development-environment
services:
  share-db:
    restart: unless-stopped
    container_name: share-db
    image: postgres:16.3-bullseye
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - yamp-network

  redis-svc:
    restart: unless-stopped
    container_name: redis-svc
    networks:
      - yamp-network
    image: redis:6.2.5
    ports:
      - 6379:6379


  zookeeper:
    container_name: zookeeper
    restart: unless-stopped
    image: confluentinc/cp-zookeeper:7.4.6
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
        - "2181:2181"
  kafka:
    container_name: kafka
    hostname: kafka-svc
    restart: unless-stopped
    image: confluentinc/cp-kafka:7.4.6
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka-svc:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#  prometheus:
#    image: prom/prometheus:v2.50.1
#    network_mode: host
#    ports:
#      - "9090:9090"
#    volumes:
#      - ../observation-and-monitoring/prometheus/datasources.yaml:/etc/prometheus/datasources.yaml
#  tempo:
#    container_name: tempo
#    image: grafana/tempo:latest
#    command: -config.file=/etc/tempo/datasources.yaml
#    volumes:
#      - ../../observation-and-monitoring/tempo/:/etc/tempo/
#    ports:
#      - 3100:3100
#      - 4317:4317
#  grafana:
#    network_mode: host
#    image: grafana/grafana:latest
#    environment:
#      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#    entrypoint:
#      - sh
#      - -euc
#      - |
#        /run.sh
#    ports:
#      - "3000:3000"
#    volumes:
#      - ../observation-and-monitoring/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
#    healthcheck:
#      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

volumes:
  postgres-data:
    name: postgres-data
networks:
  yamp-network:
    name: yamp-network-development